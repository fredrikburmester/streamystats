name: build-push
on:
  push:
    branches:
      - main # triggers :edge builds
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: [main]

jobs:
  docker:
    runs-on: ubuntu-22.04
    # skip PRs with [skip ci]
    if: github.event_name != 'pull_request' || !contains(github.event.pull_request.title, '[skip ci]')
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - id: meta_next
        uses: docker/metadata-action@v5
        with:
          images: alvitali/streamystats-nextjs
          tags: |
            type=edge,branch=main
            type=semver,pattern={{version}},event=tag   # vX.Y.Z
            type=sha,event=push,branch=main

      - id: meta_phx
        uses: docker/metadata-action@v5
        with:
          images: alvitali/streamystats-phoenix
          tags: |
            type=edge,branch=main
            type=semver,pattern={{version}},event=tag
            type=sha,event=push,branch=main

      - name: Build & push Next.js
        uses: docker/build-push-action@v5
        with:
          context: ./app
          file: ./app/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ github.ref_type == 'tag' && github.ref_name || 'edge' }}
            COMMIT_SHA=${{ github.sha }}
            BUILD_TIME=$(date +%s)
          tags: ${{ steps.meta_next.outputs.tags }}
          labels: ${{ steps.meta_next.outputs.labels }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # - name: Build & push Phoenix
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ./server
      #     file: ./server/Dockerfile
      #     platforms: linux/amd64,linux/arm64
      #     build-args: VERSION=${{ github.ref_name }}
      #     tags: ${{ steps.meta_phx.outputs.tags }}
      #     labels: ${{ steps.meta_phx.outputs.labels }}
      #     push: true
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
